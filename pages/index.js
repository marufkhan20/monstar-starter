import { getSession, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useEffect } from "react";

const buttons = [
  {
    text: "Fitness Plan",
    url: "/apps/fitnessplan/fitnessplan",
  },
  {
    text: "Social Media Post",
    url: "/apps/socialmedia/socialmedia",
  },
  {
    text: "Essay Outliner",
    url: "/apps/essayoutliner/essayoutliner",
  },
  {
    text: "Movie Script",
    url: "/apps/moviescript/moviescript",
  },
  {
    text: "Service Calls",
    url: "/apps/servicecalls/servicecalls",
  },
  {
    text: "Group Event Email",
    url: "/apps/eventemail/eventemail",
  },
  {
    text: "Product Review",
    url: "/apps/productreview/productreview",
  },
  {
    text: "Slogan Creator",
    url: "/apps/slogancreator/slogancreator",
  },
  {
    text: "Book Review",
    url: "/apps/bookreview/bookreview",
  },
  {
    text: "Recruiter Response",
    url: "/apps/recruiterresponse/recruiterresponse",
  },
];

export default function Home() {
  const { data: session } = useSession();

  useEffect(async () => {
    if (session) {
      const { email, image, name } = session?.user || {};

      const options = {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, image, name }),
      };

      await fetch(`http://localhost:3000/api/auth/google-register`, options);
    }
  }, [session]);
  return (
    <div>
      <Head>
        <title>AI Content Creator App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="buttons_grid">
        {buttons.map((button, i) => (
          <Link href={button.url}>
            <a
              style={{
                background: "#079EFB",
                color: "white",
                display: "inline-block",
                padding: "12px 25px",
                textDecoration: "none",
              }}
            >
              {button.text}
            </a>
          </Link>
        ))}
      </div>
    </div>
  );
}

export async function getServerSideProps({ req }) {
  const session = await getSession({
    req,
  });

  if (!session) {
    return {
      redirect: {
        destination: "/auth/loginformik",
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
}
